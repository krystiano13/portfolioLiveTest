{"version":3,"file":"static/js/70.549ea3df.chunk.js","mappings":"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","sources":["components/Background/Models/Saturn/Saturn.jsx","components/Background/planetList.js","components/Background/TextureImporter.js","components/Background/Planet.jsx","components/Background/Camera.js","components/Background/Planets.js"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport saturnModel from './saturn_project.glb';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nexport function Saturn(props) {\r\n  const { nodes, materials } = useGLTF(saturnModel);\r\n  const group = useRef(null);\r\n\r\n  useFrame(() => {\r\n    group.current.rotation.y += 0.0055;\r\n  })\r\n\r\n  return (\r\n    <group position={[-150,0,70]} ref={group} {...props} dispose={null}>\r\n      <group scale={5}>\r\n        <mesh geometry={nodes.pSphere1_aiStandardSurface1_0.geometry} material={materials.aiStandardSurface1} />\r\n        <mesh geometry={nodes.pTorus1_aiStandardSurface2_0.geometry} material={materials.aiStandardSurface2} scale={[1.886, 0.014, 1.886]} />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/saturn_project.glb')\r\n","import mercury from './Textures/mercury.jpg';\r\nimport venus from './Textures/venus.webp';\r\nimport earth from './Textures/earth.webp';\r\nimport mars from './Textures/mars.jpg';\r\nimport jupiter from './Textures/jupiter.jpg';\r\nimport uranus from './Textures/uranus.jpg';\r\nimport sun from './Textures/sun.webp';\r\n\r\nexport const planetList = [\r\n  {\r\n    name: \"mercury\",\r\n    texture: mercury,\r\n    scale: [1, 1, 1],\r\n    position: [-5, 0, 0],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"venus\",\r\n    texture: venus,\r\n    scale: [5, 5, 5],\r\n    position: [5, 0, 30],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"earth\",\r\n    texture: earth,\r\n    scale: [5, 5, 5],\r\n    position: [-45, 0, 80],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"mars\",\r\n    texture: mars,\r\n    scale: [4, 4, 4],\r\n    position: [-20, 0, -90],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"jupiter\",\r\n    texture: jupiter,\r\n    scale: [10, 10, 10],\r\n    position: [-125, 0, -50],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"uranus\",\r\n    texture: uranus,\r\n    scale: [7, 7, 7],\r\n    position: [-25, 0, 150],\r\n    rotationSpeed: 0.001,\r\n  },\r\n  {\r\n    name: \"sun\",\r\n    texture: sun,\r\n    scale: [20, 20, 20],\r\n    position: [-40, 0, 0],\r\n    rotationSpeed: 0,\r\n  },\r\n];","import { TextureLoader } from \"three\";\r\nimport { useLoader } from \"@react-three/fiber\";\r\n\r\nconst TextureImporter = (path) => {\r\n    const texture = useLoader(TextureLoader,path);\r\n    return texture;\r\n}\r\n\r\nexport default TextureImporter;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport TextureImporter from './TextureImporter';\r\n\r\nexport const Planet = ({ texturePath, scale, position, rotSpeed }) => {\r\n  const ModelRef = useRef(null);\r\n  const texture = TextureImporter(texturePath);\r\n\r\n  useFrame(() => {\r\n    ModelRef.current.rotation.y += rotSpeed;\r\n  });\r\n  return (\r\n    <mesh position={position} scale={scale} ref={ModelRef}>\r\n      <sphereBufferGeometry />\r\n      <meshBasicMaterial map={texture} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nPlanet.propTypes = {\r\n  texturePath : PropTypes.string,\r\n  scale : PropTypes.arrayOf(PropTypes.number),\r\n  position : PropTypes.arrayOf(PropTypes.number),\r\n  rotSpeed : PropTypes.number\r\n}\r\n","import React , { useEffect } from \"react\";\r\nimport { PerspectiveCamera } from \"@react-three/drei\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport gsap from 'gsap';\r\n\r\nconst Camera = ({ CameraRef, animState }) => {\r\n\r\n  useEffect(() => {\r\n    if(animState == -1) {\r\n        gsap.to(CameraRef.current.position, { z : 200, duration : 2 })\r\n    }\r\n  },[]);\r\n\r\n  useFrame(() => {\r\n    if (animState == 0 || animState == -1) {\r\n      CameraRef.current.position.x += 0.01;\r\n      CameraRef.current.position.z -= 0.01;\r\n      CameraRef.current.rotation.y += 0.0001;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PerspectiveCamera\r\n      ref={CameraRef}\r\n      rotation={[-0.28, -0.1, 0]}\r\n      position={[0, 35, 1000]}\r\n      fov={75}\r\n      makeDefault\r\n    />\r\n  );\r\n};\r\n\r\nCamera.propTypes = {\r\n  CameraRef: PropTypes.any,\r\n  animState: PropTypes.number,\r\n};\r\n\r\nexport { Camera };\r\n","import { Saturn } from \"./Models/Saturn/Saturn\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Stars } from \"@react-three/drei\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { planetList } from \"./planetList\";\r\nimport { Planet } from \"./Planet\";\r\nimport { Camera } from \"./Camera\";\r\n\r\nconst Planets = ({ animState }) => {\r\n  const CameraRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    import(\"./LoadAnimations\").then((module) =>\r\n      module.LoadAnimations(CameraRef, animState)\r\n    );\r\n  }, [animState]);\r\n\r\n  return (\r\n    <Canvas>\r\n      <Camera animState={animState} CameraRef={CameraRef} />\r\n      {planetList.map((item) => (\r\n        <Planet\r\n          key={item.name}\r\n          texturePath={item.texture}\r\n          rotSpeed={item.rotationSpeed}\r\n          position={item.position}\r\n          scale={item.scale}\r\n        />\r\n      ))}\r\n      <Saturn />\r\n      <Stars />\r\n      <ambientLight />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nPlanets.propTypes = {\r\n  animState: PropTypes.number,\r\n  ready: PropTypes.func,\r\n};\r\n\r\nexport default Planets;\r\n"],"names":["Saturn","props","_useGLTF","useGLTF","saturnModel","nodes","materials","group","useRef","useFrame","current","rotation","y","_jsx","_objectSpread","position","ref","dispose","children","_jsxs","scale","geometry","pSphere1_aiStandardSurface1_0","material","aiStandardSurface1","pTorus1_aiStandardSurface2_0","aiStandardSurface2","planetList","name","texture","rotationSpeed","path","useLoader","TextureLoader","Planet","_ref","texturePath","rotSpeed","ModelRef","TextureImporter","map","Camera","CameraRef","animState","useEffect","gsap","z","duration","x","PerspectiveCamera","fov","makeDefault","then","module","LoadAnimations","Canvas","item","Stars"],"sourceRoot":""}